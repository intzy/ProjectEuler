"""
Problem 009 of Project Euler.

https://projecteuler.net/problem=009
"""

from math import gcd, isqrt


def problem009(perimeter=1_000):
    """
    All pythagorean triples (a, b, c) are generated by positive integers m, n, k by
        a = k(m^2 - n^2)
        b = 2kmn
        c = k(m^2 + n^2),
    where m > n, and m and n are coprime and not both odd.

    Uniquness is proven.
    """
    pythagorean_products = []

    for m in range(2, isqrt(perimeter)):
        for n in range(m - 1, 0, -2):
            if gcd(m, n) != 1:
                continue
            a = m ** 2 - n ** 2
            b = 2 * m * n
            c = m ** 2 + n ** 2
            k = perimeter // (a + b + c)
            if k * (a + b + c) == perimeter:
                pythagorean_products.append(k ** 3 * a * b * c)

    if len(pythagorean_products) == 0:
        return None
    if len(pythagorean_products) == 1:
        return pythagorean_products[0]
    return pythagorean_products
